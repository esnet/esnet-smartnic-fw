# This file can be copied to .env in the same directory to customize some of the
# behaviour of the docker-compose.yml file
#
# Note: The variables marked (Required) must be set in your .env file

# Choose **ONE OF** the available stack profiles
#  <empty> or unset         -->   xilinx-hwserver, smartnic-unpack, smartnic-hw, smartnic-fw, smartnic-p4
#  smartnic-no-vfio         -->   default + smartnic-devunbind (raw device memory access only, no vfio/iommu at all)
#  smartnic-mgr-user        -->   default + smartnic-devbind (vfio driver attached, user application must open vfio device)
#  smartnic-mgr-dpdk-manual -->   default + smartnic-devbind + smartnic-dpdk (user must run pktgen in smartnic-dpdk-docker container)
#  smartnic-mgr-vfio-unlock -->   default + smartnic-devbind + smartnic-vfio-unlock (python program opens vfio device)
#
# Use X if you want...
#  * smartnic-no-vfio: device access without using vfio or iommu (basic register access only)
#  * smartnic-mgr-vfio-unlock: a completely managed environment that provides access to regio/sn-cli/sn-p4-cli, no PCIe packet injection
#  * smartnic-mgr-dpdk-manual: to manually run pkgten in the smartnic-dpdk container to additionally tx/rx packets over PCIe
#  * smartnic-mgr-user: to embed sn-stack under your own DPDK application
#
# **If you don't know what you want, pick "smartnic-mgr-vfio-unlock" below**
#
#COMPOSE_PROFILES=
#COMPOSE_PROFILES=smartnic-no-vfio
#COMPOSE_PROFILES=smartnic-mgr-user
#COMPOSE_PROFILES=smartnic-mgr-dpdk-manual
#COMPOSE_PROFILES=smartnic-mgr-vfio-unlock

# (Optional)
# Helper to allow multiple (up to 10) instances of this docker stack to coexist on the same server without colliding on
# names, volumes, ports, etc.  You will still need to start each docker compose stack individually with a *different*
# value of the UNIQUE variable.  This setting DOES NOT itself automatically create/start multiple instances of the docker stack.
#
# Note: Setting this value to anything other than 0 will result in some of the services in the stack being exposed
#       on different port numbers than the defaults.  Please adjust your client programs accordingly.
#
# Set this to an integer value between 0 and 9
# UNIQUE=0

# (Optional) (Recommended)
# Append your username to the compose project name
#  - This helps to avoid collisions in docker object names when multiple users are working on the same system
COMPOSE_PROJECT_NAME=sn-stack-${USER}${UNIQUE:-}

# (Optional)
# Set this variable if you want to pull the xilinx-labtools-docker image from a remote registry rather than building locally
#LABTOOLS_IMAGE_URI=wharf.es.net/ht/xilinx-labtools-docker:30136-g1dadef71

# (Optional)
# Set this variable if you want to pull the esnet-smartnic-fw image from a remote registry rather than building locally
#SMARTNIC_FW_IMAGE_URI=wharf.es.net/ht/esnet-smartnic-fw:28728-ga8155293

# (Optional)
# Set this variable if you want to pull the smartnic-dpdk-docker image from a remote registry rather than building locally
#SMARTNIC_DPDK_IMAGE_URI=wharf.es.net/ht/smartnic-dpdk-docker:34635-g2745d783

# (Optional)
# Choose a specific JTAG cable (and thus a specific U280 card) to take control of
# If this is commented out, it will default to "*" which just chooses the first JTAG cable it finds
# which is exactly what you want if you only have a single JTAG cable in your system.
#
#   Discover the address using lsusb
#   $ sudo lsusb -v -d 0403:6011 | grep iSerial
#   iSerial                 3 21770205K01Y
#
# Note: An extra letter "A" must be appended to the serial number to get it to match in vivado labtools
#HW_TARGET_SERIAL=21770205K01YA

# (Required -- default is safe)
# Choose a specific TCP port for the Xilinx HW Server to listen on.  Default is 50000.
# This option should be used when running multiple stacks on a single host so that
# each stack's HW Server listens on a unique port, avoiding conflict.
HW_SERVER_PORT=5000${UNIQUE:-0}

# (Required -- default is safe)
# Choose a specific TCP port for the P4 Agent to listen on.  Default is 50050.
# This option should be used when running multiple stacks on a single host so that
# each stack's P4 Agent listens on a unique port, avoiding conflict.
P4_AGENT_PORT=5005${UNIQUE:-0}

# (Required)
# Used to select PCIe device that the application stack should bind against
#
#   Discover the addresses using lspci
#            $ lspci -Dd 10ee:
#            0000:d8:00.0 Memory controller: Xilinx Corporation Device 903f
#            0000:d8:00.1 Memory controller: Xilinx Corporation Device 913f
#            |  | || || |
#   Domain --++++ || || |
#   Bus ----------++ || |
#   Device ----------++ |
#   Function -----------+
#
# Note: The PCIe function (the ".0" or ".1") is left off of this variable
#FPGA_PCIE_DEV=0000:d8:00

# (Optional)
# Used to mount an alternative directory containing Robot Framework test suites
# and library for firmware testing.
#SN_FW_TEST_ROOT=/path/to/mount/onto/sn-stack/test/fw

# (Optional)
# Used to mount an alternative directory containing Robot Framework test suites
# and library for hardware testing.
#SN_HW_TEST_ROOT=/path/to/mount/onto/sn-stack/test/hw
