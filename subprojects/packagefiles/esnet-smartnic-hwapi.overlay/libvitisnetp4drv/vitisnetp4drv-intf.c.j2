#include "{{ intf_h.name }}"

#include "{{ ip_name }}_defs.h"
#include "esnet_smartnic_toplevel.h"
#include "vitisnetp4_common.h"
#include "vitisnetp4_table.h"
#include "vitisnetp4_target.h"

#include <stddef.h>

/*----------------------------------------------------------------------------*/
const struct vitis_net_p4_drv_intf vitis_net_p4_drv_intf_{{ ip_name }} = {
    .info = {
        .name = "{{ ip_name }}",
        .offset = offsetof(struct esnet_smartnic_bar2, {{ regmap_name }}),
    },

    .common = {
        .stub_env_if = XilVitisNetP4StubEnvIf,
    },

    .counter = {
        .init = XilVitisNetP4CounterInit,
        .exit = XilVitisNetP4CounterExit,
        .reset = XilVitisNetP4CounterReset,
        .simple_read = XilVitisNetP4CounterSimpleRead,
        .simple_write = XilVitisNetP4CounterSimpleWrite,
        .combo_read = XilVitisNetP4CounterComboRead,
        .combo_write = XilVitisNetP4CounterComboWrite,
        .collect_simple_read = XilVitisNetP4CounterCollectRead,
        .collect_combo_read = XilVitisNetP4CounterCollectComboRead,
    },

    .table = {
        .reset = XilVitisNetP4TableReset,
        .update = XilVitisNetP4TableUpdate,
        .delete = XilVitisNetP4TableDelete,
        .insert = XilVitisNetP4TableInsert,
        .get_mode = XilVitisNetP4TableGetMode,
        .get_action_id = XilVitisNetP4TableGetActionId,
        .get_action_name = XilVitisNetP4TableGetActionNameById,
        .get_num_actions = XilVitisNetP4TableGetNumActions,
        .get_key_size_bits = XilVitisNetP4TableGetKeySizeBits,
        .get_action_id_size_bits = XilVitisNetP4TableGetActionIdWidthBits,
        .get_action_params_size_bits = XilVitisNetP4TableGetActionParamsSizeBits,
        .get_by_key = XilVitisNetP4TableGetByKey,
        .get_by_response = XilVitisNetP4TableGetByResponse,
        .get_ecc_counters = XilVitisNetP4TableGetEccCountersClearOnRead,
    },

    .target = {
        .config = &XilVitisNetP4TargetConfig_{{ ip_name }},
        .init = XilVitisNetP4TargetInit,
        .exit = XilVitisNetP4TargetExit,
        .get_table_by_index = XilVitisNetP4TargetGetTableByIndex,
        .get_table_by_name = XilVitisNetP4TargetGetTableByName,
        .get_table_count = XilVitisNetP4TargetGetTableCount,
    },
};

